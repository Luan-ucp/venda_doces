
package estruturavendadedoces;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class JFrameFazerPedido extends javax.swing.JFrame {
    
    boolean confere = true; //confere se todos os campos foram preenchidos, está fora por causa da função de ação do botão voltar da caixa de dialogo

    public JFrameFazerPedido() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldData = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jCheckBoxDoceLeite = new javax.swing.JCheckBox();
        jTextFieldLeite320g = new javax.swing.JTextField();
        jTextFieldLeite600g = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBoxDoceCoco = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldCoco320g = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldCoco600g = new javax.swing.JTextField();
        jCheckBoxValorAdiantado = new javax.swing.JCheckBox();
        jTextFieldValorAdiantado = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButtonConfirmar = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaObs = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fazer Pedido");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Nome: ");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Data: ");

        jCheckBoxDoceLeite.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jCheckBoxDoceLeite.setText("Doce de Leite");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("320g");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("600g");

        jCheckBoxDoceCoco.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jCheckBoxDoceCoco.setText("Doce de Coco");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("320g");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("600g");

        jCheckBoxValorAdiantado.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jCheckBoxValorAdiantado.setText("Valor Adiantado");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("R$");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Observação");

        jButtonConfirmar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonConfirmar.setText("Confirmar");
        jButtonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarActionPerformed(evt);
            }
        });

        jButtonVoltar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jTextAreaObs.setColumns(20);
        jTextAreaObs.setRows(5);
        jScrollPane1.setViewportView(jTextAreaObs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonVoltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonConfirmar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jCheckBoxDoceLeite)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel4))
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextFieldLeite600g, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextFieldLeite320g, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jCheckBoxValorAdiantado)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jCheckBoxDoceCoco)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldCoco320g, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldCoco600g)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jTextFieldValorAdiantado, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane1))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxDoceLeite)
                    .addComponent(jTextFieldLeite320g, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldLeite600g, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxDoceCoco)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldCoco320g, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldCoco600g, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxValorAdiantado)
                    .addComponent(jTextFieldValorAdiantado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConfirmar)
                    .addComponent(jButtonVoltar))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //botão confirmar
    private void jButtonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarActionPerformed

        String nomeCliente = null;
        String dataPedido = null;
        String obs = null;
        int qtdDoceLeite320 = 0;
        int qtdDoceLeite600 = 0;
        int qtdDoceCoco320 = 0;
        int qtdDoceCoco600 = 0;
        float valorTotal = 0;
        float valorAdiantado = 0;
        float valorAPagar = 0;
        
        if(jTextFieldNome.getText().isEmpty() || jTextFieldData.getText().isEmpty()){
            confere = false;
        }
        else{
            nomeCliente = jTextFieldNome.getText();
            dataPedido = jTextFieldData.getText();          
        }

        if(jCheckBoxDoceLeite.isSelected()){
            
            //verifica se os dois ou um campo foi preechido
            if(jTextFieldLeite320g.getText().isEmpty() && jTextFieldLeite600g.getText().isEmpty()){
                confere = false;
            }
            else{
                
                //fiz isso para o usuário não precisar inserir 0 na caixa de texto
                if(jTextFieldLeite320g.getText().isEmpty()){
                    
                    qtdDoceLeite320 = 0;
                }
                else{
                    qtdDoceLeite320 = Integer.parseInt(jTextFieldLeite320g.getText().trim());
                }
                
                if(jTextFieldLeite600g.getText().isEmpty()){
                    qtdDoceLeite600 = 0;
                }
                else{
                    qtdDoceLeite600 = Integer.parseInt(jTextFieldLeite600g.getText().trim());
                }
                
            }
        }
        else{
            qtdDoceLeite320 = 0;
            qtdDoceLeite600 = 0;
        }
        
        if(jCheckBoxDoceCoco.isSelected()){
            
            //verifica se os dois campos foram preechidos
            if(jTextFieldCoco320g.getText().isEmpty() && jTextFieldCoco600g.getText().isEmpty()){
                confere = false;
            }
            else{
                //fiz isso para o usuário não precisar inserir 0 na caixa de texto
                if(jTextFieldCoco320g.getText().isEmpty()){
                    
                    qtdDoceCoco320 = 0;
                }
                else{
                    qtdDoceCoco320 = Integer.parseInt(jTextFieldCoco320g.getText().trim());
                }
                
                if(jTextFieldCoco600g.getText().isEmpty()){
                    qtdDoceCoco600 = 0;
                }
                else{
                    qtdDoceCoco600 = Integer.parseInt(jTextFieldCoco600g.getText().trim());
                }
            }
        }
        else{
            qtdDoceCoco320 = 0;
            qtdDoceCoco600 = 0;
        }
        
        if(jCheckBoxValorAdiantado.isSelected()){
            
            //confere se foi colocado algum valor
            if(jTextFieldValorAdiantado.getText().isEmpty()){
                confere  = false;
            }
            else{
                valorAdiantado = Float.parseFloat(jTextFieldValorAdiantado.getText().trim());
            }
        }
        else{
            valorAdiantado = 0;
        }
        
        if(jTextAreaObs.getText().isEmpty() == false){
            obs = jTextAreaObs.getText();           
        }
        else{
            obs = "";
        }

        if(confere == false){
            //objeto da caixa de diálogo, e o "confere" passa a ser true de novo
            JDialogAtencao dialog = new JDialogAtencao(new javax.swing.JFrame(), true);
            dialog.setVisible(true);
            confere = true;
        }
        else{
            ConexaoAccess objConectaAccess = new ConexaoAccess(); //obj para armazenar estes dados no access
            valorTotal = CalculoValorPagar(qtdDoceLeite320, qtdDoceLeite600, qtdDoceCoco320, qtdDoceCoco600);
            valorAPagar = valorTotal - valorAdiantado;
            
            try {
                //chama o método para inserir os dados
                objConectaAccess.InserirDados(nomeCliente, dataPedido, qtdDoceLeite320, qtdDoceLeite600, qtdDoceCoco320, qtdDoceCoco600, valorTotal, valorAdiantado, valorAPagar,obs);
                JDialogSucesso dialog = new JDialogSucesso(new javax.swing.JFrame(), true);
                dialog.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(JFrameFazerPedido.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButtonConfirmarActionPerformed

    //botão voltar
    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        this.dispose();
        new JFramePrincipal().setVisible(true);
    }//GEN-LAST:event_jButtonVoltarActionPerformed


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameFazerPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameFazerPedido().setVisible(true);
            }
        });
    }    
    
    public float CalculoValorPagar(int qtdDoceLeite320, int qtdDoceLeite600, int qtdDoceCoco320, int qtdDoceCoco600){
           
        return (((qtdDoceLeite320 + qtdDoceCoco320) * 10) + ((qtdDoceLeite600 + qtdDoceCoco600) * 20));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConfirmar;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JCheckBox jCheckBoxDoceCoco;
    private javax.swing.JCheckBox jCheckBoxDoceLeite;
    private javax.swing.JCheckBox jCheckBoxValorAdiantado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaObs;
    private javax.swing.JTextField jTextFieldCoco320g;
    private javax.swing.JTextField jTextFieldCoco600g;
    private javax.swing.JTextField jTextFieldData;
    private javax.swing.JTextField jTextFieldLeite320g;
    private javax.swing.JTextField jTextFieldLeite600g;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldValorAdiantado;
    // End of variables declaration//GEN-END:variables
}
